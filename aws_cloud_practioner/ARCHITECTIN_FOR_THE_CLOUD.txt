TRADITIONAL ON PREMISE COMPUTING VS CLOUD COMPUTING


===


SCALABILITY

    SCALE UP
        INCREASING AMOUNT OF RAM, OR AMOUNT OF CPU INDIVIDUL INTO VM.
        MORE COMMON THING

        -> STATELESS APPLICAITONS
            EVERY TIME YOU TALK WITH ALEXA YOU TALK WITH LAMBDA
        -> DISTRIBUTED LOAD TO MULTIPLE NODES
        -> STATELESS COMPONENTS
        -> STATEFUL COMPONENTS
        -> IMPLEMENT SESSION AFFINITY
        -> IMPLEMENT DISTRIBUTED PROCESSING
            -> ELASTIC MAPREDUCE  (THOUSANDS OF INSTANCES PROCESSING THE DATA)

-> DISPOSABLE RESOURCES INSTEAD OF FIXED SERVERS
    -> INSTANTING COMPUTE RESOURCES
        -> BOOTSTRAPPING
        -> GOLDEN IMAGES
        -> CONTAINERS
        -> HYBRID

-> INFRASTRUCTURE AS CODE
    -> CLOUDFORMATION

-> AUTOMATION
    -> SERVERLASS MANAGEMENT AND DEPLOYMENT
    -> INFRASTRUCTURE MANAGEMENT AND DEVELOPMENT
        -> AWS ELASTIC BEANSTALK
        -> AMAZON EC2 AUTO RECOVERY
        -> AWS SYSTEM MANAGER
        -> AUTOSCALING

    -> ALARMS AND EVENTS
        -> AMAZON CLOUDWATCH ALARMS
        -> AMAZON CLOUDWATCH EVENTS
        -> WAY OF ENVIRONMENT PROACTIVE RESPOND.
        -> AWS LAMBDA SCHEDULED EVENTS
        -> AWS WAF SECURITY AUTOMATIONS(PROTECTING FOR HACKER, SQL INJECT...)

-> LOOSE COUPLING
    -> WELL DEFINED INTERFACES
        -> AMAZON APU GATEWAY
    
    -> SERVICE DISCOVERY
        -> IMPLEMENT SERVICE DISCOVERY

    -> DISTRIBUTED SYSTEMS BEST PRACTICE
        -> GRACEFUL FAILURE IN PRACTICE


--> SERVICES NOT SERVERS
    -> MANAGED SERVICES (LMABDA, S3, ROUTE53)
    -> SERVERLESS ARCHITECTURES

    "NO SERVER IS EASIER TO MANAGE THAN NO SERVER"
        - WERNER VOGELS (CTO AWS)
    
PART 2

-> DATABASES 
    -> RELATIONAL DATABASES(AURORA)
        -> SCALABILITY
        -> HIGH AVAILABILITY - MULTI AZ
        -> ANTI-PATTERNS (NO NEED FOR JOIN OR COMPLEX TRANSACTION, USE NOSQL)

    -> NON RELATIONAL DATABASES (DYNAMOBD)
        -> SCALABILITY
        -> HIGH AVAILABILITY - MULTI AZ 
        -> ANTI-PATTERNS 
            -> REQUIRES JOIN OR COMPLEX TRANSACTION, USE RELATIONAL DATABASES (AURORA OR OTHERS)
            -> IF YOU HAVE LARGE BINARY FILES(AUDIO, VIDEO, IMAGE), CONSIDER STORING THE FILES IN AMAZON S3

        -> DATA WAREHOUSES(REDSHIFT)
            -> SCALABILITY
            -> HIGH AVAILABILITY - MULTI AZ 
            -> ANTI=PATTERNS - NOT MEANT FOR ON LINE TRANSACTION PROCESSING (OLAP)

    -> SEARCH (CLOUDSEARCH, AMAZON ELASTIC SEARCH)
        -> SCALABILITY
        -> HIGH AVAILABILITY
        
    -> GRAPH DATABASES(NEPTUNE)
        -> SCALABILITY
        -> HIGH AVAILABILITY

    
-> MANAGING INCREASING VOLUMES OF DATA
    -> DATA LAKE
        -> IS AN ARCHITCTURAL APPROACH THAT ALLOWS YOU TO STORE MASSIVE AMOUNT OF DATA IN CENTRAL
        LOCATION SO THAT IS READILY AVAILABILITY TO BE CATEGORIZED, PROCESSED,ANALYZED, AND CONSUMED BY DIVERSE GROUPS WITHIN YOUR ORGANIZATIONS.
    
-> REMOVING SINGLE POINTS OF FAILURE
    -> INTRODUCING REDUNDANCY
    -> DETECT FAILURE
    -> DURABLE DATA STORAGE
    -> AUTOMATED MULTI-DATA CENTRE RESILIENCE
    -> FAULT ISOLATION AND TRADITIONAL HORIZONTAL SCALING
    -> SHARDING (SPLIT IT ACCORSS MULTIPLE SHARDS...PROCESS YOUR DATA A LOT FASTER)

-> OPTIMIZE FOR COST 
    -> RIGHT SIZING
    -> ELASTICITY
    -> TAKE ADVANTAGE OF THE VARIETY OF PURCHASING OPTIONS
        -> RESERVED CAPACITY
        -> SPOT INSTANCES..

CACHING 
    -> APPLICATION CACHING (USING ELASTICCACHE)
    -> EDGE CACHING(CDN, LIKE CLOUDFROUNT)

SECURITY       
    -> USE AWS FEATURES FOR DEFENCES IN DEPTH
    -> SHARE SECURITY RESPONSIBILITY WITH AWS
        -> YOU ARE RESPONSIBLE FOR SOMETHING AND AWS IS RESPONSIBLE TO SOMETHING..

    -> REDUCE PRIVILEGED ACCESS
    -> SECURITY AS CODE
    -> REAL-TIME AUDITING AWS ENVIRONMENT (AWS CLOUDTRAIL)

READ THE WHITEPAPER THE DAY BEFORE THE EXAM
    https://d1.awsstatic.com/whitepapers/aws-overview.pdf

 

































































































